<tool id="modulus_predicting" name="Modulus Heat Flow Simulation Predicting" version="0.1.0">
 
    <description>Modulus Prediciting Environment</description>
   
    <requirements>
      <container type="docker">nvcr.io/nvidia/modulus/modulus:24.04</container>
    </requirements>
   
    <command>
      <![CDATA[
        mkdir conf &&
        mkdir outputs &&
        mkdir outputs/run &&
        cp '$config' ./conf/config.yaml &&
        cp '$PINN_net' ./outputs/run/u2_network.0.pth &&
        cp '$PINN_optim' ./outputs/run/optim_checkpoint.0.pth &&
        cp '$reactorwall' ./reactorWall.STL &&
        cp '$reactorwall_inner_sur' ./reactorWallInner.STL &&
        cp '$reactorwall_outer_sur' ./reactorWallOuter.STL &&
        cp '$reactorwall_side' ./reactorWallSide.STL &&
        cp '$heat_flux' ./heat_flux.txt &&
        cp '$interior_points' ./interior_points.txt &&
        cp '$__tool_directory__/Heat_transfer.py' ./run.py &&
        python run.py 2>&1 &&
        mv ./outputs/run/inferencers/output.npz '$PINN_Output'
      ]]>
    </command>
   
    <inputs>
      <param type="data" name="config" label="Config" />
      <param type="data" name="PINN_net" label="PINN network path" />
      <param type="data" name="PINN_optim" label="PINN optim path" />
      <param type="data" name="reactorwall" label="Reactorwall" />
      <param type="data" name="reactorwall_inner_sur" label="Reactor Wall Inner Surface" />
      <param type="data" name="reactorwall_outer_sur" label="Reactor Wall Outer Surface" />
      <param type="data" name="reactorwall_side" label="Reactor Wall Side Surface" />
      <param type="data" name="heat_flux" label="Heat Flux" />
      <param type="data" name="interior_points" label="Interior Points" />
    </inputs>
   
    <outputs>
      <data format="npz" name="PINN_Output" label="PINN_Output" />
    </outputs>
   
    <help>
      Use a pretrained PINN for Predicting.
    </help>
   
    <citations>
   
    </citations>
  </tool>